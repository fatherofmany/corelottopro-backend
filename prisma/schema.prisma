generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_DATABASE_URL")
}


model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  handle    String?  @unique
  wallets   Wallet[]
}

model Wallet {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  address    String   @unique
  user       User?    @relation(fields: [userId], references: [id])
  userId     String?
  entries    Entry[]
  txs        Tx[]
  prizesWon  Prize[]  @relation("WalletPrizes") // Opposite side of Prize.winner
}

model Round {
  id          String       @id @default(cuid())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  roundId     Int          @unique
  tier        Int
  ticketPrice Decimal
  status      RoundStatus  @default(OPEN)
  closesAt    DateTime?
  totalPool   Decimal      @default(0)
  entries     Entry[]
  prizes      Prize[]
}

enum RoundStatus {
  OPEN
  CLOSED
  DRAWN
  SETTLED
}

model Entry {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  round     Round    @relation(fields: [roundId], references: [id])
  roundId   String
  wallet    Wallet   @relation(fields: [walletId], references: [id])
  walletId  String
  quantity  Int      @default(1)
  txHash    String
  blockNum  BigInt
  logIndex  Int
  @@unique([txHash, logIndex])
}

model Prize {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  round     Round    @relation(fields: [roundId], references: [id])
  roundId   String
  place     Int
  amount    Decimal
  winner    Wallet?  @relation("WalletPrizes", fields: [winnerId], references: [id])
  winnerId  String?
}

model Event {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  name      String
  txHash    String
  blockNum  BigInt
  logIndex  Int
  data      Json
  @@unique([txHash, logIndex])
}

model Tx {
  id        String      @id @default(cuid())
  createdAt DateTime    @default(now())
  hash      String      @unique
  wallet    Wallet?     @relation(fields: [walletId], references: [id])
  walletId  String?
  direction TxDirection
  method    String?
  value     Decimal     @default(0)
}

enum TxDirection {
  IN
  OUT
}
